// Code generated by MockGen. DO NOT EDIT.
// Source: card_number.go
//
// Generated by this command:
//
//	mockgen -source=card_number.go -destination=./mocks/card_number_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCardNumberGenerator is a mock of CardNumberGenerator interface.
type MockCardNumberGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockCardNumberGeneratorMockRecorder
	isgomock struct{}
}

// MockCardNumberGeneratorMockRecorder is the mock recorder for MockCardNumberGenerator.
type MockCardNumberGeneratorMockRecorder struct {
	mock *MockCardNumberGenerator
}

// NewMockCardNumberGenerator creates a new mock instance.
func NewMockCardNumberGenerator(ctrl *gomock.Controller) *MockCardNumberGenerator {
	mock := &MockCardNumberGenerator{ctrl: ctrl}
	mock.recorder = &MockCardNumberGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCardNumberGenerator) EXPECT() *MockCardNumberGeneratorMockRecorder {
	return m.recorder
}

// GenerateCardNumber mocks base method.
func (m *MockCardNumberGenerator) GenerateCardNumber() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateCardNumber")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateCardNumber indicates an expected call of GenerateCardNumber.
func (mr *MockCardNumberGeneratorMockRecorder) GenerateCardNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateCardNumber", reflect.TypeOf((*MockCardNumberGenerator)(nil).GenerateCardNumber))
}
