// Code generated by MockGen. DO NOT EDIT.
// Source: accounts_delete.go
//
// Generated by this command:
//
//	mockgen -source=accounts_delete.go -destination=./mocks/accounts_delete_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDeleteAccountByID is a mock of DeleteAccountByID interface.
type MockDeleteAccountByID struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteAccountByIDMockRecorder
	isgomock struct{}
}

// MockDeleteAccountByIDMockRecorder is the mock recorder for MockDeleteAccountByID.
type MockDeleteAccountByIDMockRecorder struct {
	mock *MockDeleteAccountByID
}

// NewMockDeleteAccountByID creates a new mock instance.
func NewMockDeleteAccountByID(ctrl *gomock.Controller) *MockDeleteAccountByID {
	mock := &MockDeleteAccountByID{ctrl: ctrl}
	mock.recorder = &MockDeleteAccountByIDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteAccountByID) EXPECT() *MockDeleteAccountByIDMockRecorder {
	return m.recorder
}

// DeleteAccountByID mocks base method.
func (m *MockDeleteAccountByID) DeleteAccountByID(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAccountByID", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAccountByID indicates an expected call of DeleteAccountByID.
func (mr *MockDeleteAccountByIDMockRecorder) DeleteAccountByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAccountByID", reflect.TypeOf((*MockDeleteAccountByID)(nil).DeleteAccountByID), ctx, id)
}
