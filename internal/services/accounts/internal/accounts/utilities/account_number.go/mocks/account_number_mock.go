// Code generated by MockGen. DO NOT EDIT.
// Source: account_number.go
//
// Generated by this command:
//
//	mockgen -source=account_number.go -destination=./mocks/account_number_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAccountNumberGenerator is a mock of AccountNumberGenerator interface.
type MockAccountNumberGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockAccountNumberGeneratorMockRecorder
	isgomock struct{}
}

// MockAccountNumberGeneratorMockRecorder is the mock recorder for MockAccountNumberGenerator.
type MockAccountNumberGeneratorMockRecorder struct {
	mock *MockAccountNumberGenerator
}

// NewMockAccountNumberGenerator creates a new mock instance.
func NewMockAccountNumberGenerator(ctrl *gomock.Controller) *MockAccountNumberGenerator {
	mock := &MockAccountNumberGenerator{ctrl: ctrl}
	mock.recorder = &MockAccountNumberGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountNumberGenerator) EXPECT() *MockAccountNumberGeneratorMockRecorder {
	return m.recorder
}

// GenerateAccountNumber mocks base method.
func (m *MockAccountNumberGenerator) GenerateAccountNumber() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateAccountNumber")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateAccountNumber indicates an expected call of GenerateAccountNumber.
func (mr *MockAccountNumberGeneratorMockRecorder) GenerateAccountNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateAccountNumber", reflect.TypeOf((*MockAccountNumberGenerator)(nil).GenerateAccountNumber))
}
