// Code generated by MockGen. DO NOT EDIT.
// Source: loans_create.go
//
// Generated by this command:
//
//	mockgen -source=loans_create.go -destination=mocks/loans_create_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entities "github.com/Leon180/go-event-driven-microservices/internal/services/loans/internal/loans/entities"
	gomock "go.uber.org/mock/gomock"
)

// MockCreateLoan is a mock of CreateLoan interface.
type MockCreateLoan struct {
	ctrl     *gomock.Controller
	recorder *MockCreateLoanMockRecorder
	isgomock struct{}
}

// MockCreateLoanMockRecorder is the mock recorder for MockCreateLoan.
type MockCreateLoanMockRecorder struct {
	mock *MockCreateLoan
}

// NewMockCreateLoan creates a new mock instance.
func NewMockCreateLoan(ctrl *gomock.Controller) *MockCreateLoan {
	mock := &MockCreateLoan{ctrl: ctrl}
	mock.recorder = &MockCreateLoanMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateLoan) EXPECT() *MockCreateLoanMockRecorder {
	return m.recorder
}

// CreateLoan mocks base method.
func (m *MockCreateLoan) CreateLoan(ctx context.Context, loan *entities.Loan) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoan", ctx, loan)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLoan indicates an expected call of CreateLoan.
func (mr *MockCreateLoanMockRecorder) CreateLoan(ctx, loan any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoan", reflect.TypeOf((*MockCreateLoan)(nil).CreateLoan), ctx, loan)
}

// MockCreateLoans is a mock of CreateLoans interface.
type MockCreateLoans struct {
	ctrl     *gomock.Controller
	recorder *MockCreateLoansMockRecorder
	isgomock struct{}
}

// MockCreateLoansMockRecorder is the mock recorder for MockCreateLoans.
type MockCreateLoansMockRecorder struct {
	mock *MockCreateLoans
}

// NewMockCreateLoans creates a new mock instance.
func NewMockCreateLoans(ctrl *gomock.Controller) *MockCreateLoans {
	mock := &MockCreateLoans{ctrl: ctrl}
	mock.recorder = &MockCreateLoansMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateLoans) EXPECT() *MockCreateLoansMockRecorder {
	return m.recorder
}

// CreateLoans mocks base method.
func (m *MockCreateLoans) CreateLoans(ctx context.Context, loans entities.Loans) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLoans", ctx, loans)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLoans indicates an expected call of CreateLoans.
func (mr *MockCreateLoansMockRecorder) CreateLoans(ctx, loans any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLoans", reflect.TypeOf((*MockCreateLoans)(nil).CreateLoans), ctx, loans)
}
